#!/bin/bash

source ./.env

# Note: Ensure network rpc is configured in ./foundry.toml
NETWORK="hyperspace"
# NETWORK="wallaby"
# NETWORK="arbitrum-goerli"

NODES=($NODE_1_ADDRESS $NODE_2_ADDRESS $NODE_3_ADDRESS)
# -- Step 1 --
    # a. Deploy DKGFactory
    forge script script/DeployDKGFactory.s.sol:DeployDKGFactory --rpc-url $NETWORK --broadcast -vvvv --skip-simulation --slow

    # b. Now save the newly deployed address as the DKG_FACTORY_ADDRESS in ./.env 
    # c. Also, copy the address to medusa-network/medusa/deploy/deploy.sh


# -- Step 2 --
    # a. Deploy OracleFactory
    forge script script/DeployOracleFactory.s.sol:DeployOracleFactory --rpc-url $NETWORK --broadcast -vvvv --skip-simulation --slow
    # b. Now save the newly deployed address as the ORACLE_FACTORY_ADDRESS in ./.env 
    # c. Also, copy the address to medusa-network/medusa/deploy/deploy.sh

# -- Step 3 --
# a. Deploy/update medusa nodes for new network by running medusa-network/medusa/deploy/deploy.sh

# -- Step 3 --
    # a. Authorize nodes to participate in DKG
    for node in "${NODES[@]}"
    do
        cast send ${DKG_FACTORY_ADDRESS} \
            "addAuthorizedNode(address)(bool)" \
            $node \
            --async \
            --rpc-url $NETWORK \
            --private-key ${PRIVATE_KEY}
    done

    # b. Deploy a new DKG
    cast send ${DKG_FACTORY_ADDRESS} \
        "deployNewDKG()" \
        --rpc-url $NETWORK \
        --private-key ${PRIVATE_KEY}

    # c. Save new DKG address as DKG_ADDRESS in ./.env
    # d. Wait for nodes to detect the new DKG and complete the process

    # e. Get the distributed key from the completed DKG
    cast call ${DKG_ADDRESS} \
        --rpc-url $NETWORK \
        "distributedKey()(uint256,uint256)"
    # f. Save the output as DIST_KEY in ./.env

# -- Step 4 --
    # a. Deploy a new encryption oracle with the key generated by the DKG
    cast send ${ORACLE_FACTORY_ADDRESS} \
            "deployReencryption_BN254_G1_HGAMAL((uint256, uint256))(address)" \
            ${DIST_KEY} \
            --rpc-url $NETWORK \
            --private-key ${PRIVATE_KEY}
# -- Step 5 --
    # a. Deploy the OnlyFiles client contract
    forge script script/DeployOnlyFiles.s.sol:DeployOnlyFiles --rpc-url $NETWORK --broadcast -vvvv --skip-simulation --slow

